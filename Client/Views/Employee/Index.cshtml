@model List<Server.DTOs.Employees.EmployeeWithNameDto>

@{
    ViewData["Title"] = "Index";
    
}


<div class="card">
    <h1 class="card-header text-center">Data Employees</h1>
    <p>
        @*<a class="btn btn-primary" href="/Employee/Create">Add Employee <i class="fa-solid fa-plus"></i></a>
        <a asp-action="Create">Create New</a>*@
    </p>
    <div class="table-responsive text-nowrap">
        <table class="table table-hover" id="employeeTable">
        <thead>
        <tr>
            <th>
                No.
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Nik)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].FullName)
            </th>
            
            <th>
                @Html.DisplayNameFor(model => model[0].BirthDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].HiringDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].DepartmentName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].ManagerName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].LeaveRemain)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Guid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifiedDate)
            </th>*@
            @if (User.IsInRole("admin"))
            {
                <th>Action</th>
            }
            
        </tr>
    </thead>
    <tbody>
        @{
            int rowNumber = 1;
        }
@foreach (var item in Model) {
        <tr>
            <td>
                @rowNumber
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nik)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @if (item.BirthDate != null)
                {
                    @item.BirthDate.Date.ToString("dd/MM/yyyy")
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @if (item.HiringDate != null)
                {
                    @item.HiringDate.Date.ToString("dd/MM/yyyy")
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DepartmentName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ManagerName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LeaveRemain) days
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Guid)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModifiedDate)
            </td>*@
            @if (User.IsInRole("admin"))
            {
                <td>
                    <div class="table-actions" style="display: flex;">
                        <form>
                            <a asp-action="Edit" asp-route-id="@item.Guid" class="fas fa-edit text-info"></a>
                        </form>
                        <form action="/Employee/Delete" method="post" onsubmit="return confirm('Apakah Anda Yakin Ingin menghapus data ini?')">
                            <input type="hidden" value="@item.Guid" name="guid" />
                            <button value="" style="background: none; border: none;" class="fas fa-trash text-danger" onclick="return true"></button>
                        </form>
                    </div>
                </td>
            }
                        
        </tr>
        rowNumber++;
}
    </tbody>
</table>
</div>
</div>

@section Scripts
{
    <script>
    
    function getDataTables() {
        // Define the DataTable initialization options outside of the document.ready function
        const dataTableOptions = {
            dom: 'Blfrtip',
            buttons: [
                'copy', 'csv', 'excel', 'pdf', 'print', 'colvis'
            ],
            ajax: {
                url: "Employee/",
                dataSrc: "data", // Use "data" instead of "results" to access the array directly
                dataType: "JSON",
                headers: {
                    "Content-Type": "application/json",
                    // Include the Authorization header with the token
                    // Authorization: `Bearer ${token}`,
                },
            },
            columns: [
                {
                    data: "",
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    },
                },
                { data: "nik" },
                { data: "fullName" },
                {
                    data: "birthDate",
                    render: function (data, type, row) {
                        const dateObj = new Date(data);
                        return dateObj.toLocaleDateString("en-GB");
                    },
                },
                {
                    data: "gender",
                    render: function (data, type, row) {
                        return data ? "perempuan" : "laki-laki";
                    },
                },
                {
                    data: '',
                    render: function (data, type) {
                        return '';
                    }
                }
            ]
        };
    
        // Initialize DataTable inside the document.ready function
        $(document).ready(function () {
            let table = $("#myTable").DataTable(dataTableOptions);
        });
    }
    
    $(document).ready(function () {
        const Token = '@Context.Session.GetString("JWToken")';
        $.ajax({
            url: "https://localhost:7293/api/accounts/",
            headers: {
                "Authorization": "Bearer " + Token
            }
        }).done(function (result) {
            if (result.data.length > 0) {
                const accounts = result.data.find(e => e.guid === '@User.FindFirst("Guid")?.Value');
                console.log(accounts)
                if (accounts && accounts.profilPictureUrl) {
                    $('#profilePicture').attr('src', accounts.profilPictureUrl);
                    $('#profilePictureDropDown').attr('src', accounts.profilPictureUrl);
                } else {
                    $('#profilePicture').attr('src', '/assets/img/avatars/1.png');
                    $('#profilePictureDropDown').attr('src', '/assets/img/avatars/1.png');
                }
            } else {
                $('#profilePicture').attr('src', '/assets/img/avatars/1.png');
                $('#profilePictureDropDown').attr('src', '/assets/img/avatars/1.png');
            }
        }).fail(function () {
            $('#profilePicture').attr('src', '/assets/img/avatars/1.png');
            $('#profilePictureDropDown').attr('src', '/assets/img/avatars/1.png');
        });
    });
    </script>
}


