@model List<Server.DTOs.Accounts.AccountDto>

@{
    ViewData["Title"] = "Index";
}



<div class="card">
    <h1 class="card-header">Data Account</h1>
    <div class="table-responsive text-nowrap">
        <table class="table table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Guid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].ProfilPictureUrl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].IsUsed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].ExpiredTime)
            </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Guid)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProfilPictureUrl)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsUsed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExpiredTime)
            </td>
            <td>
                    <a asp-action="Edit" asp-route-id="@item.Guid" class="fas fa-edit text-info"></a>
                    <form action="/Account/Delete" method="post" onsubmit="return confirm('Apakah Anda Yakin Ingin menghapus data ini?')">
                        @*<a asp-action="Delete" onclick="return true" asp-route-id="@item.Guid" class="fas fa-trash text-danger"></a>*@
                        <input type="hidden" value="@item.Guid" name="guid" />
                        <button value="" class="fas fa-trash text-danger" onclick="return true"></button>
                    </form>
            </td>
        </tr>
}
    </tbody>
</table>
    </div>
</div>

@section Scripts
{
    <script>
    $(document).ready(function () {
        const Token = '@Context.Session.GetString("JWToken")';
        $.ajax({
            url: "https://localhost:7293/api/accounts/",
            headers: {
                "Authorization": "Bearer " + Token
            }
        }).done(function (result) {
            if (result.data.length > 0) {
                const accounts = result.data.find(e => e.guid === '@User.FindFirst("Guid")?.Value');
                console.log(accounts)
                if (accounts && accounts.profilPictureUrl) {
                    $('#profilePicture').attr('src', accounts.profilPictureUrl);
                    $('#profilePictureDropDown').attr('src', accounts.profilPictureUrl);
                } else {
                    $('#profilePicture').attr('src', '/assets/img/avatars/1.png');
                    $('#profilePictureDropDown').attr('src', '/assets/img/avatars/1.png');
                }
            } else {
                $('#profilePicture').attr('src', '/assets/img/avatars/1.png');
                $('#profilePictureDropDown').attr('src', '/assets/img/avatars/1.png');
            }
        }).fail(function () {
            $('#profilePicture').attr('src', '/assets/img/avatars/1.png');
            $('#profilePictureDropDown').attr('src', '/assets/img/avatars/1.png');
        });
    });
    </script>
}
