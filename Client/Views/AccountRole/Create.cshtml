@model Server.DTOs.AccountRoles.NewAccountRoleDto

@{
    ViewData["Title"] = "Create";
}

@if (TempData["Success"] != null)
{
    <script>
        Swal.fire({
            title: 'Success!',
            text: '@TempData["Success"]',
            icon: 'success'
        });
    </script>
}

<div class="row">
    <div class="col-1"></div>
    <div class="col">
        <div class="card mx-auto mb-3 border-0">
            <div class="card-body">
                <div>
                    <h1 class="card-header bg-info text-white text-center">Create New Account Role</h1>
                    <br />
                    <form action="/AccountRole/Create" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <label asp-for="AccountGuid" class="control-label">Employee</label>
                            <select asp-for="AccountGuid" class="selectEmployee form-control">

                            </select>
                            <span asp-validation-for="AccountGuid" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="RoleGuid" class="control-label">Role</label>
                            <select asp-for="RoleGuid" class="selectRole form-control">

                            </select>
                        </div>
                        <br />
                        <div class="form-group">
                            <input type="submit" value="Create" class="btn btn-primary" />
                        </div>
                    </form>
                </div>
                <br />
                <div>
                    <a asp-action="Info">Back to List</a>
                </div>
            </div>
        </div>
    </div>
    <div class="col-1"></div>
</div>



@section Scripts {
    <script>
        const Token = '@Context.Session.GetString("JWToken")'
        $.ajax({
            url: "https://localhost:7293/api/roles",
            headers:
            {
                "Authorization": "Bearer " + Token
            }
        }).done(function (result) {
            // Assuming the API response contains a property named
            let getRole = ""
            $.each(result.data, (key, val) => {
                console.log(result)
                getRole += `<option value="${val.guid}">${val.name}</option>`
            })
            $('.selectRole').html(getRole)
        }).fail(function () {
            $(".selectRole").text("Failed to fetch data");
        });

        $.ajax({
            url: "https://localhost:7293/api/employees",
            headers:
            {
                "Authorization": "Bearer " + Token
            }
        }).done(function (result) {
            // Assuming the API response contains a property named
            let getEmployees = ""
            $.each(result.data, (key, val) => {
                console.log(result)
                getEmployees += `<option value="${val.guid}">${val.nik} - ${val.firstName} ${val.lastName} </option>`
            })
            $('.selectEmployee').html(getEmployees)
        }).fail(function () {
            $(".selectEmployee").text("Failed to fetch data");
        });
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
